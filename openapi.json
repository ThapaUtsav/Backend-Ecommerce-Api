{
  "openapi": "3.0.3",
  "info": {
    "title": "Secure E-commerce API",
    "version": "1.0.0",
    "description": "A RESTful e-commerce API with authentication, product management, and order processing."
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/api/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserInput" }
            }
          }
        },
        "responses": {
          "201": { "description": "User registered" },
          "400": { "description": "Invalid input" }
        }
      }
    },
    "/api/login": {
      "post": {
        "summary": "Login user",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginInput" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": { "type": "string" }
                  }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/products": {
      "get": {
        "summary": "Get products with filters",
        "tags": ["Products"],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Filter producs by name (Partial search works)"
          },
          {
            "name": "category",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Filter products by category"
          },
          {
            "name": "price_gte",
            "in": "query",
            "schema": { "type": "number" },
            "description": "Filter products with price greater than or equal to this value"
          },
          {
            "name": "price_lte",
            "in": "query",
            "schema": { "type": "number" },
            "description": "Filter products with price less than or equal to this value"
          },
          {
            "name": "ordered_by",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["newest", "oldest"],
              "default": "newest"
            },
            "description": "Sort products by creation date"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["price_asc", "price_desc"],
              "default": "price_asc"
            },
            "description": "Sort direction for ordered_by: 'price_asc' = oldest to newest, 'pricedesc' = newest to oldest"
          },
          {
            "name": "size",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Item size ranging from integer to string when shown as output "
          },
          {
            "name": "brand",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Item size ranging from integer to string when shown as output "
          },
          {
            "name": "color",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Item size ranging from integer to string when shown as output "
          }
        ],
        "responses": {
          "200": {
            "description": "List of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Product" }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create product (Admin only)",
        "tags": ["Products"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "description": { "type": "string" },
                  "price": { "type": "number" },
                  "category": { "type": "string" },
                  "images": {
                    "type": "array",
                    "items": { "type": "string", "format": "binary" }
                  },
                  "inventory": { "type": "integer" }
                },
                "required": ["name", "price"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Product created" },
          "403": { "description": "Admin only" }
        }
      }
    },
    "/api/products/{id}": {
      "patch": {
        "summary": "Update product inventory",
        "tags": ["Products"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "inventory": { "type": "integer" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Inventory updated" },
          "404": { "description": "Product not found" }
        }
      }
    },
    "/orders": {
      "post": {
        "summary": "Create an order",
        "tags": ["Orders"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "productId": { "type": "string" },
                        "quantity": { "type": "integer" }
                      },
                      "required": ["productId", "quantity"]
                    }
                  },
                  "address": { "type": "string" }
                },
                "required": ["items"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Order created" },
          "400": { "description": "Bad request" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "UserInput": {
        "type": "object",
        "description": "This is for registration of customer role basically default",
        "properties": {
          "email": { "type": "string", "format": "email" },
          "password": { "type": "string", "example": "rootpassword" },
          "role": {
            "type": "string",
            "enum": ["customer", "admin"],
            "default": "customer"
          }
        },
        "required": ["email", "password"]
      },
      "LoginInput": {
        "type": "object",
        "properties": {
          "email": { "type": "string", "format": "email" },
          "password": { "type": "string", "example": "rootpassword" }
        },
        "required": ["email", "password"]
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "example": 1 },
          "name": { "type": "string", "example": "Nike AIR" },
          "description": {
            "type": "string",
            "example": "Aireless heels on shoe and a authentication claidation on buyers purchase"
          },
          "price": { "type": "number", "example": "200.99" },
          "category": { "type": "string", "example": "Sports Shoes" },
          "images": {
            "type": "array",
            "items": { "type": "string", "format": "uri" }
          },
          "inventory": { "type": "integer" }
        }
      }
    }
  }
}
